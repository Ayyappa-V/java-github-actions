name: Java CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Java and code build
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
      - run: |
          java -version
          mvn -version
          mvn clean install
          mvn test
          
      - name: Sonar Cache
        uses: actions/cache@v1.2.1
        with:
          # A directory to store and save the cache
          path: ~/.sonar/cache
          # An explicit key for restoring and saving the cache
          key: ${{ runner.os }}-sonar
          # An ordered list of keys to use for restoring the cache if no cache hit occurred for key
          restore-keys: ${{ runner.os }}-sonar
          
      - name: Maven Cache
        uses: actions/cache@v1.2.1
        with:
          # A directory to store and save the cache
          path: ~/.m2
          # An explicit key for restoring and saving the cache
          key: ${{ runner.os }}-m2-${{ hashfiles('**/pom.xml') }}
           # An ordered list of keys to use for restoring the cache if no cache hit occurred for key
          restore-keys: ${{ runner.os }}-m2
      
      
#      - name: Cache SonarQube packages uses: actions/cache@v1 with:
#path: ~/.sonal/cache key: ${f runner.os }}-sonar restore-keys: ${{ runner.os })-sonar
#- name: Cache Maven packages uses: actions/cache@v1 with:
#path: ~/.m2
#key: $(f runner.os ))-m2-s(f hashFiles (***/pom.xml') ))
#restore-keys: ${{ runner.os })-m2
          
     
        env:
          GITHUB TOKEN: ${{ secrets. GITHUB_TOKEN }} # Needed to get PR information, if an
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:-Dsonar.projectKey=sathya-java


